name: 'Check File Changes'
description: 'Check for specific file type changes in PR'
author: 'r0227n'

inputs:
  base_sha:
    description: 'Base commit SHA for comparison'
    required: true
  head_sha:
    description: 'Head commit SHA for comparison'
    required: true

outputs:
  dart_changed:
    description: 'Number of .dart files changed'
    value: ${{ steps.check_changes.outputs.dart_changed }}
  yml_changed:
    description: 'Number of .yml files changed'
    value: ${{ steps.check_changes.outputs.yml_changed }}
  yaml_changed:
    description: 'Number of .yaml files changed'
    value: ${{ steps.check_changes.outputs.yaml_changed }}
  md_changed:
    description: 'Number of .md files changed'
    value: ${{ steps.check_changes.outputs.md_changed }}
  i18n_changed:
    description: 'Number of .i18n.json files changed'
    value: ${{ steps.check_changes.outputs.i18n_changed }}
  changed_workspaces:
    description: 'List of changed workspaces (space-separated)'
    value: ${{ steps.check_changes.outputs.changed_workspaces }}
  app_changed:
    description: 'Whether app workspace changed'
    value: ${{ steps.check_changes.outputs.app_changed }}
  app_logger_changed:
    description: 'Whether app_logger workspace changed'
    value: ${{ steps.check_changes.outputs.app_logger_changed }}
  app_preferences_changed:
    description: 'Whether app_preferences workspace changed'
    value: ${{ steps.check_changes.outputs.app_preferences_changed }}

runs:
  using: 'composite'
  steps:
    - name: Check for file changes
      id: check_changes
      shell: bash
      run: |
        # Get changed files in PR
        CHANGED_FILES=$(git diff --name-only ${{ inputs.base_sha }}..${{ inputs.head_sha }})

        # Check for specific file types
        echo "dart_changed=$(echo "$CHANGED_FILES" | grep -E '\.dart$' | wc -l | xargs)" >> $GITHUB_OUTPUT
        echo "yml_changed=$(echo "$CHANGED_FILES" | grep -E '\.yml$' | wc -l | xargs)" >> $GITHUB_OUTPUT
        echo "yaml_changed=$(echo "$CHANGED_FILES" | grep -E '\.yaml$' | wc -l | xargs)" >> $GITHUB_OUTPUT
        echo "md_changed=$(echo "$CHANGED_FILES" | grep -E '\.md$' | wc -l | xargs)" >> $GITHUB_OUTPUT
        echo "i18n_changed=$(echo "$CHANGED_FILES" | grep -E '\.i18n\.json$' | wc -l | xargs)" >> $GITHUB_OUTPUT

        # Check for changed workspaces
        CHANGED_WORKSPACES=""
        APP_CHANGED="false"
        APP_LOGGER_CHANGED="false" 
        APP_PREFERENCES_CHANGED="false"

        if echo "$CHANGED_FILES" | grep -q "^app/"; then
          CHANGED_WORKSPACES="$CHANGED_WORKSPACES app"
          APP_CHANGED="true"
        fi

        if echo "$CHANGED_FILES" | grep -q "^packages/app_logger/"; then
          CHANGED_WORKSPACES="$CHANGED_WORKSPACES app_logger"
          APP_LOGGER_CHANGED="true"
        fi

        if echo "$CHANGED_FILES" | grep -q "^packages/app_preferences/"; then
          CHANGED_WORKSPACES="$CHANGED_WORKSPACES app_preferences"
          APP_PREFERENCES_CHANGED="true"
        fi

        # Trim leading whitespace
        CHANGED_WORKSPACES=$(echo "$CHANGED_WORKSPACES" | xargs)

        echo "changed_workspaces=$CHANGED_WORKSPACES" >> $GITHUB_OUTPUT
        echo "app_changed=$APP_CHANGED" >> $GITHUB_OUTPUT
        echo "app_logger_changed=$APP_LOGGER_CHANGED" >> $GITHUB_OUTPUT
        echo "app_preferences_changed=$APP_PREFERENCES_CHANGED" >> $GITHUB_OUTPUT

        # Debug output
        echo "Changed files:"
        echo "$CHANGED_FILES"
        echo "Dart files changed: $(echo "$CHANGED_FILES" | grep -E '\.dart$' | wc -l | xargs)"
        echo "YML files changed: $(echo "$CHANGED_FILES" | grep -E '\.yml$' | wc -l | xargs)"
        echo "YAML files changed: $(echo "$CHANGED_FILES" | grep -E '\.yaml$' | wc -l | xargs)"
        echo "MD files changed: $(echo "$CHANGED_FILES" | grep -E '\.md$' | wc -l | xargs)"
        echo "i18n files changed: $(echo "$CHANGED_FILES" | grep -E '\.i18n\.json$' | wc -l | xargs)"
        echo "Changed workspaces: $CHANGED_WORKSPACES"
        echo "App changed: $APP_CHANGED"
        echo "App logger changed: $APP_LOGGER_CHANGED"  
        echo "App preferences changed: $APP_PREFERENCES_CHANGED"
